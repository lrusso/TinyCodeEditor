<!DOCTYPE html>
<html class="header_html" lang="en">
	<head>
		<meta charset="UTF-8">
		<title>TinyACE Editor</title>
		<link rel="stylesheet" href="tinyACE.css" type="text/css">
	</head>
	<body>
		<script>
			var userLanguage = window.navigator.userLanguage || window.navigator.language;

			var STRING_FILENAME = "";
			var STRING_FILENAME_EMPTY = "";
			var STRING_NEW_QUESTION = "";
			var STRING_WELCOME = "";

			if (userLanguage.substring(0,2)=="es")
				{
				STRING_FILENAME = "Sin nombre.htm";
				STRING_FILENAME_EMPTY = "Sin nombre";
				STRING_NEW_QUESTION = "\u00BFPerder cualquier cambio no guardado?";
				STRING_WELCOME = "<!DOCTYPE html>\n<html lang=\"es\">\n" + String.fromCharCode(9) + "<head>\n" + String.fromCharCode(9) + String.fromCharCode(9) + "<meta charset=\"UTF-8\">\n" + String.fromCharCode(9) + String.fromCharCode(9) + "<link rel=\"stylesheet\" href=\"estilos.css\">\n" + String.fromCharCode(9) + String.fromCharCode(9) + "<title>Bienvenido a TinyACE Editor (basado en Ace Code Editor) por Leonardo Russo / www.lrusso.com</title>\n" + String.fromCharCode(9) + "</head>\n" + String.fromCharCode(9) + "<body>\n" + String.fromCharCode(9) + String.fromCharCode(9) + "<form action=\"ejemplo.htm\" method=\"GET\">\n" + String.fromCharCode(9) + String.fromCharCode(9) + String.fromCharCode(9) + "<input type=\"text\" value=\"TEXTO DE PRUEBA\">\n" + String.fromCharCode(9) + String.fromCharCode(9) + String.fromCharCode(9) + "<input type=\"submit\" value=\"INGRESAR\">\n" + String.fromCharCode(9) + String.fromCharCode(9) + "</form>\n" + String.fromCharCode(9) + "</body>\n</html>";
				}
				else
				{
				STRING_FILENAME = "Untitled.htm";
				STRING_FILENAME_EMPTY = "Untitled";
				STRING_NEW_QUESTION = "Lose any unsaved changes?";
				STRING_WELCOME = "<!DOCTYPE html>\n<html lang=\"en\">\n" + String.fromCharCode(9) + "<head>\n" + String.fromCharCode(9) + String.fromCharCode(9) + "<meta charset=\"UTF-8\">\n" + String.fromCharCode(9) + String.fromCharCode(9) + "<link rel=\"stylesheet\" href=\"styles.css\">\n" + String.fromCharCode(9) + String.fromCharCode(9) + "<title>Welcome to TinyACE Editor (based on Ace Code Editor) by Leonardo Russo / www.lrusso.com</title>\n" + String.fromCharCode(9) + "</head>\n" + String.fromCharCode(9) + "<body>\n" + String.fromCharCode(9) + String.fromCharCode(9) + "<form action=\"example.htm\" method=\"GET\">\n" + String.fromCharCode(9) + String.fromCharCode(9) + String.fromCharCode(9) + "<input type=\"text\" value=\"TEST TEXT\">\n" + String.fromCharCode(9) + String.fromCharCode(9) + String.fromCharCode(9) + "<input type=\"submit\" value=\"ENTER\">\n" + String.fromCharCode(9) + String.fromCharCode(9) + "</form>\n" + String.fromCharCode(9) + "</body>\n</html>";
				}
		</script>
		<div class="tinyace_splash"></div><div class="tinyace_splash_container"></div>
		<div class="tinyace_menubar">
			<div class="tinyace_holder">
				<div class="tinyace_button_new_enabled" id="buttonNew"></div>
			</div>
			<div class="tinyace_holder">
				<div class="tinyace_button_open_enabled" id="buttonOpen"></div>
				<input type="file" class="tinyace_buttonHidden" id="fileOpener" onChange="menuOpenFile(document.getElementById('fileOpener').files[0]);">
			</div>
			<div class="tinyace_holder">
				<div class="tinyace_button_save_enabled" id="buttonSave"></div>
			</div>
			<div class="tinyace_separator"></div>
			<div class="tinyace_holder">
				<div class="tinyace_button_undo_disabled" id="buttonUndo"></div>
			</div>
			<div class="tinyace_holder">
				<div class="tinyace_button_redo_disabled" id="buttonRedo"></div>
			</div>
			<div class="tinyace_separator"></div>
			<div class="tinyace_holder">
				<div class="tinyace_button_search_enabled" id="buttonSearch"></div>
			</div>
			<div class="tinyace_separator"></div>
			<div class="tinyace_holder">
				<div class="tinyace_dropdown">
					<div class="tinyace_dropdown_button" id="tinyace_language">HTML</div>
					<div id="myDropdown" class="tinyace_dropdown_content">
						<span onclick="menuLanguage('html')">HTML</span>
						<span onclick="menuLanguage('javascript')">JavaScript</span>
						<span onclick="menuLanguage('css')">CSS</span>
						<span onclick="menuLanguage('java')">Java</span>
						<span onclick="menuLanguage('php')">PHP</span>
						<span onclick="menuLanguage('xml')">XML</span>
						<span onclick="menuLanguage('c')">C / C++</span>
						<span onclick="menuLanguage('arduino')">Arduino</span>
					</div>
				</div>
			</div>
			<div class="tinyace_separator2"></div>
			<div class="tinyace_holder">
				<div id="tinyace_filename"><script>document.write(STRING_FILENAME_EMPTY + ".htm");</script></div>
			</div>
		</div>
		<div id="tinyace_textcode_container"><div id="tinyace_textcode"></div></div>

		<script src="tinyACE.js"></script>
		<script>
			// SETTING THE DEFAULT FILE NAME IN THE LABEL
			document.getElementById("tinyace_filename").innerHTML = STRING_FILENAME;

			// SETTING THE PATH OF THE ACE CORE
			ace.config.set("basePath",".");

			// CREATING THE ACE INSTANCE
			var editor = ace.edit("tinyace_textcode");

			// SETTING THE OPTIONS
			editor.setOptions({fontSize:"14px",showPrintMargin:false,showInvisibles:true,tabSize:4,useSoftTabs:false,highlightActiveLine:false});

			// REMOVING COMMAND
			editor.commands.removeCommand("gotoline");

			// SETTING THE DEFAULT PROGRAMMING LANGUAGE IN THE ACE CORE
			editor.session.setMode("ace/mode/html");

			// SETTING THE THEME
			editor.setTheme("ace/theme/monokai");

			// DISABLING WORKERS
			editor.session.setUseWorker(false);

			// SETTING WELCOME MESSAGE
			editor.setValue(STRING_WELCOME);

			// CLEARING SELECTION
			editor.clearSelection();

			// MOVING TO TOP OF THE DOCUMENT
			editor.selection.moveTo(0,0);

			// CLEARING THE UNDOMANAGER RECORDS
			editor.session.getUndoManager().reset();

			// GETTING FOCUS IN THE EDITOR
			editor.focus();

			// SETTING WHAT WILL HAPPEN WHEN THE EDITOR CONTENT CHANGES
			editor.getSession().on("change", function()
				{
				// THE DOCUMENT WILL BE DIRTY
				window.onbeforeunload = function(e){return "changed";};

				// THE UNDO BUTTON WILL BE ENABLED
				document.getElementById("buttonUndo").classList.add("tinyace_button_undo_enabled");
				document.getElementById("buttonUndo").classList.remove("tinyace_button_undo_disabled");
				});

			function menuNewFile()
				{
				var message = true;

				// IF THE DOCUMENT IS DIRTY, A DISCARD CHANGES QUESTION WILL SHOW UP
				if (!editor.session.getUndoManager().isClean())
					{
					message = confirm(STRING_NEW_QUESTION);
					}

				// IF THE USER DISCARDS CHANGES OR CREATES A NEW DOCUMENT
				if (message == true)
					{
					// SETTING THE DEFAULT FILE NAME IN THE LABEL
					STRING_FILENAME = STRING_FILENAME_EMPTY + ".htm";
					document.getElementById("tinyace_filename").innerHTML = STRING_FILENAME;

					// SETTING THE DEFAULT PROGRAMMING LANGUAGE
					document.getElementById("tinyace_language").innerHTML = "HTML";
					editor.session.setMode("ace/mode/html");

					// CLEARING THE EDITOR CONTENT
					editor.setValue("");

					// CLEARING SELECTION
					editor.clearSelection();

					// MOVING TO TOP OF THE DOCUMENT
					editor.selection.moveTo(0,0);

					// CLEARING THE UNDOMANAGER RECORDS
					editor.session.getUndoManager().reset();

					// SETTING THE DEFAULT STATE FOR EACH BUTTON
					document.getElementById("buttonUndo").classList.add("tinyace_button_undo_disabled");
					document.getElementById("buttonUndo").classList.remove("tinyace_button_undo_enabled");
					document.getElementById("buttonRedo").classList.add("tinyace_button_redo_disabled");
					document.getElementById("buttonRedo").classList.remove("tinyace_button_redo_enabled");

					// HIDING THE SEARCH BOX (IF AVAILABLE)
					try{editor.searchBox.hide();}catch(err){}

					// SETTING THE DOCUMENT AS CLEAN
					window.onbeforeunload = null;
					}

				// GETTING FOCUS IN THE EDITOR
				try
					{
					editor.focus();
					}
					catch(err)
					{
					}
				}

			function menuOpenFile(file)
				{
				var message = true;

				// IF THE DOCUMENT IS DIRTY, A DISCARD CHANGES QUESTION WILL SHOW UP
				if (!editor.session.getUndoManager().isClean())
					{
					message = confirm(STRING_NEW_QUESTION);
					}

				// IF THE USER DISCARDS CHANGES OR OPENS A DOCUMENT
				if (message == true)
					{
					// CREATING THE FILEREADER
					var filereader = new FileReader();
					filereader.file_name = file.name;

					// SETTING THE FILE NAME
					STRING_FILENAME = file.name;

					// CHECKING THE FILE EXTENSION
					var extension = filereader.file_name.split(".").pop().toLowerCase();
					filereader.onload = function()
						{
						// GETTING THE FILE CONTENT
						var content = this.result;

						// SETTING THE FILE NAME VALUE IN THE LABEL
						document.getElementById("tinyace_filename").innerHTML = STRING_FILENAME;

						// SETTING THE PROGRAMMING LANGUAGE
						var newLanguage;
						var selectedLanguage;
						if (extension=="htm" || extension=="html")		{newLanguage = "HTML";selectedLanguage="html";}
						else if (extension=="js")						{newLanguage = "JavaScript";selectedLanguage="javascript";}
						else if (extension=="css")						{newLanguage = "CSS";selectedLanguage="css";}
						else if (extension=="java")						{newLanguage = "Java";selectedLanguage="java";}
						else if (extension=="php")						{newLanguage = "PHP";selectedLanguage="php";}
						else if (extension=="xml")						{newLanguage = "XML";selectedLanguage="xml";}
						else if (extension=="c")						{newLanguage = "C";selectedLanguage="c_cpp";}
						else if (extension=="ino")						{newLanguage = "Arduino";selectedLanguage="c_cpp";}
						else											{newLanguage = "HTML";selectedLanguage="html";}

						// SETTING THE PROGRAMMING LANGUAGE IN THE LABEL
						document.getElementById("tinyace_language").innerHTML = newLanguage;

						// SETTING THE PROGRAMMING LANGUAGE IN THE ACE CORE
						editor.session.setMode("ace/mode/" + selectedLanguage);

						// SETTING THE FILE CONTENT INTO THE EDITOR
						editor.setValue(content);

						// CLEARING SELECTION
						editor.clearSelection();

						// MOVING TO TOP OF THE DOCUMENT
						editor.selection.moveTo(0,0);

						// CLEARING THE UNDOMANAGER RECORDS
						editor.session.getUndoManager().reset();

						// SETTING THE DEFAULT STATE FOR EACH BUTTON
						document.getElementById("buttonUndo").classList.add("tinyace_button_undo_disabled");
						document.getElementById("buttonUndo").classList.remove("tinyace_button_undo_enabled");
						document.getElementById("buttonRedo").classList.add("tinyace_button_redo_disabled");
						document.getElementById("buttonRedo").classList.remove("tinyace_button_redo_enabled");

						// HIDING THE SEARCH BOX (IF AVAILABLE)
						try{editor.searchBox.hide();}catch(err){}

						// SETTING THE DOCUMENT AS CLEAN
						window.onbeforeunload = null;

						// SCROLLING TO TOP OF THE DOCUMENT
						editor.scrollToLine(0,true,true,function(){});

						// GETTING FOCUS IN THE EDITOR
						editor.focus();

						// CLEARING THE SELECTED FILE VALUE
						document.getElementById("fileOpener").value = null;
						};

					// READING THE FILE
					filereader.readAsText(file,"ISO-8859-1");
					}

				// CLEARING THE SELECTED FILE VALUE
				document.getElementById("fileOpener").value = null;
				}

			function menuSaveFile()
				{
				// GETTING THE EDITOR CONTENT AS A BLOB VALUE
				var blobValue = new Blob([editor.getValue()],{type:"text/plain"});

				// GETTING THE FILE NAME
				var filename = STRING_FILENAME;

				// DOWNLOADING THE FILE
				var link = document.createElement("a");
				link.style.display = "none";
				document.body.appendChild(link);
				link.href = URL.createObjectURL(blobValue);
				link.download = filename || "data.json";
				link.click();

				try
					{
					// CLEARING THE UNDOMANAGER RECORDS
					editor.session.getUndoManager().reset();

					// SETTING THE DEFAULT STATE FOR EACH BUTTON
					document.getElementById("buttonUndo").classList.add("tinyace_button_undo_disabled");
					document.getElementById("buttonUndo").classList.remove("tinyace_button_undo_enabled");
					document.getElementById("buttonRedo").classList.add("tinyace_button_redo_disabled");
					document.getElementById("buttonRedo").classList.remove("tinyace_button_redo_enabled");

					// HIDING THE SEARCH BOX (IF AVAILABLE)
					try{editor.searchBox.hide();}catch(err){}

					// SETTING THE DOCUMENT AS CLEAN
					window.onbeforeunload = null;

					// GETTING FOCUS IN THE EDITOR
					editor.focus();
					}
					catch(err)
					{
					}
				}

			function menuSearch()
				{
				// SHOWING THE SEARCH BOX
				try
					{
					editor.execCommand("find");
					}
					catch(err)
					{
					}
				}

			function menuUndo()
				{
				try
					{
					// UNDO THE EDITOR
					editor.undo();

					// GETTING FOCUS IN THE EDITOR
					editor.focus();

					// CLEARING SELECTION
					editor.clearSelection();

					// IF THERE ARE ANY UNDOS LEFT, THE UNDO BUTTON WILL BE DISABLED
					if (!editor.session.getUndoManager().hasUndo())
						{
						document.getElementById("buttonUndo").classList.add("tinyace_button_undo_disabled");
						document.getElementById("buttonUndo").classList.remove("tinyace_button_undo_enabled");
						}

					// IF THERE ARE ANY REDOS LEFT, THE REDO BUTTON WILL BE DISABLED
					if (editor.session.getUndoManager().hasRedo())
						{
						document.getElementById("buttonRedo").classList.add("tinyace_button_redo_enabled");
						document.getElementById("buttonRedo").classList.remove("tinyace_button_redo_disabled");
						}
					}
					catch(err)
					{
					}
				}

			function menuRedo()
				{
				try
					{
					// REDO THE EDITOR
					editor.redo();

					// GETTING FOCUS IN THE EDITOR
					editor.focus();

					// CLEARING SELECTION
					editor.clearSelection();

					// IF THERE ARE ANY UNDOS LEFT, THE UNDO BUTTON WILL BE DISABLED
					if (!editor.session.getUndoManager().hasRedo())
						{
						document.getElementById("buttonRedo").classList.add("tinyace_button_redo_disabled");
						document.getElementById("buttonRedo").classList.remove("tinyace_button_redo_enabled");
						}

					// IF THERE ARE ANY REDOS LEFT, THE REDO BUTTON WILL BE DISABLED
					if (editor.session.getUndoManager().hasUndo())
						{
						document.getElementById("buttonUndo").classList.add("tinyace_button_undo_enabled");
						document.getElementById("buttonUndo").classList.remove("tinyace_button_undo_disabled");
						}
					}
					catch(err)
					{
					}
				}

			function menuLanguage(selectedLanguage)
				{
				try
					{
					// GETTING THE FILE NAME WITHOUT THE EXTENSION
					var changeFileName = STRING_FILENAME.indexOf(STRING_FILENAME_EMPTY + ".");

					// GETTING THE NEW SELECTED PROGRAMMING LANGUAGE
					var selectedExtension = "";
					var selectedLanguageLabel = "";
					if (selectedLanguage=="html")				{selectedExtension=".htm";selectedLanguageLabel="HTML";}
					else if (selectedLanguage=="javascript")	{selectedExtension=".js";selectedLanguageLabel="JavaScript";}
					else if (selectedLanguage=="css")			{selectedExtension=".css";selectedLanguageLabel="CSS";}
					else if (selectedLanguage=="java")			{selectedExtension=".java";selectedLanguageLabel="Java";}
					else if (selectedLanguage=="php")			{selectedExtension=".php";selectedLanguageLabel="PHP";}
					else if (selectedLanguage=="xml")			{selectedExtension=".xml";selectedLanguageLabel="XML";}
					else if (selectedLanguage=="c")				{selectedExtension=".c";selectedLanguage="c_cpp";selectedLanguageLabel="C";}
					else if (selectedLanguage=="arduino")		{selectedExtension=".ino";selectedLanguage="c_cpp";selectedLanguageLabel="Arduino";}
					if (changeFileName>-1){STRING_FILENAME = STRING_FILENAME_EMPTY + selectedExtension;}

					// SETTING THE NEW FILE NAME IN THE LABEL
					document.getElementById("tinyace_filename").innerHTML = STRING_FILENAME;

					// SETTING THE NEW PROGRAMMING LANGUAGE SELECTED IN THE LABEL
					document.getElementById("tinyace_language").innerHTML = selectedLanguageLabel;

					// SETTING THE NEW PROGRAMMING LANGUAGE SELECTED IN THE ACE CORE
					editor.session.setMode("ace/mode/" + selectedLanguage);

					// GETTING FOCUS IN THE EDITOR
					editor.focus();
					}
					catch(err)
					{
					}
				}

			function resizeTinyACEEditor()
				{
				// GETTING THE WINDOW SIZE
				var w = window, d = document, e = d.documentElement, g = d.getElementsByTagName("body")[0], x = w.innerWidth || e.clientWidth || g.clientWidth, y = w.innerHeight|| e.clientHeight|| g.clientHeight;

				// CALCUTING THE NEW SIZE FOR THE EDITOR
				var editHeight = y - 41;

				// RESIZING THE EDITOR
				document.getElementById("tinyace_textcode_container").style.height = editHeight.toString() + "px";
				editor.resize();

				// GETTING FOCUS IN THE EDITOR
				editor.focus();
				}

			function showDropDownMenu()
				{
				// SHOWING THE DROPDOWN MENU WITH THE PROGRAMMING LANGUAGES LIST
				document.getElementById("myDropdown").classList.toggle("tinyace_dropdown_show");
				}

			window.onresize = function()
				{
				// RESIZING THE EDITOR
				resizeTinyACEEditor();
				}

			window.onload = function()
				{
				// HIDING THE LOADING SPLASH
				document.getElementsByClassName("tinyace_splash_container")[0].style.display = "none";
				document.getElementsByClassName("tinyace_splash")[0].style.display = "none";

				// SHOWING THE CODE EDITOR
				document.getElementById("tinyace_textcode_container").style.display = "block";

				// RESIZING THE EDITOR
				resizeTinyACEEditor();

				// SETTING WHAT HAPPENS WHEN EACH ELEMENT IS CLICKED
				document.getElementById("buttonNew").addEventListener("click",function(event){menuNewFile()});
				document.getElementById("buttonOpen").addEventListener("click",function(event){editor.focus();document.getElementById("fileOpener").click();});
				document.getElementById("buttonSave").addEventListener("click",function(event){menuSaveFile()});
				document.getElementById("buttonUndo").addEventListener("click",function(event){menuUndo()});
				document.getElementById("buttonRedo").addEventListener("click",function(event){menuRedo()});
				document.getElementById("buttonSearch").addEventListener("click",function(event){menuSearch()});
				document.getElementById("tinyace_language").addEventListener("click",function(event){showDropDownMenu()});
				document.getElementById("tinyace_filename").addEventListener("click",function(event){editor.focus()});
				}

			window.onclick = function(event)
				{
				// CODE TO HIDE THE DROPDOWN LIST WHEN IS BEEN DISPLAYED AND THE CLICK HAPPENS SOMEWHERE ELSE
				if (!event.target.matches(".tinyace_dropdown_button"))
					{
					var dropdowns = document.getElementsByClassName("tinyace_dropdown_content");
					for (var i = 0; i < dropdowns.length; i++)
						{
						var openDropdown = dropdowns[i];
						if (openDropdown.classList.contains("tinyace_dropdown_show"))
							{
							openDropdown.classList.remove("tinyace_dropdown_show");
							editor.focus();
							setTimeout(function(){editor.focus();},200);
							}
						}
					}
				}
		</script>
	</body>
</html>